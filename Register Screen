import { ScrollView,View, Text,TextInput,TouchableHighlight} from 'react-native'
import Icon from 'react-native-vector-icons/Feather';
import FontAwesome from 'react-native-vector-icons/FontAwesome';
import styles from './externalStyles'
import {useState} from 'react'
//component
const SignUp = () => {
    
    //User Name Validation
    const [collectUname,setCollectUname] = useState('')

    //email Validation
    const [collectEmail,setCollectEmail] = useState('');
    const [validEmail,setValidEmail] = useState('')
    //Email Regex
    const emailPattern = /^([a-zA-Z0-9_\-\^])+@([a-z0-9_-])+\.[a-z]{2,4}$/
    //function for handling Email
    function handleEmail(value){
        setCollectEmail(value);
        if(value.length>0){
            setValidEmail(emailPattern.test(value))
        }
    }
    //Password Regex
    const passwordPattern = /^(?=(?:.*[A-Za-z]){1})(?=(?:.*[0-9]){1})(?=(?:.*[@_*%^]){1})[A-Za-z0-9@_*%^]{8,15}$/

    //Password Validation 
    const [collectPassword,setCollectPassword] = useState('');
    const [validPassword,setValidPassword] = useState('');
    const [comparePassword,setComparePassword]= useState('')
    //password handler function
    function handlePassword(value){
        setCollectPassword(value);
        setComparePassword(value)
        if(value.length>0){
            setValidPassword(passwordPattern.test(value))
        }
    }

    //confirm password handler
    const [confirmPassword,setConfirmPassword] =useState('');
    const [lengthCheck,setLengthCheck] = useState('')
    //confirm password handler function
    function handleConfirmPassword(value){
        setConfirmPassword(value);
        if(value.length>0){
            setLengthCheck(true)
        }
    }

    //Create Account API
    async function createAccount(){
       try{
        let resultMessage = await fetch('http://10.0.2.2:3000/createAccount',{
            method:'POST',
            headers:{
                'Content-Type':'application/json'
            },
            body:JSON.stringify(
                {
                    username:collectUname,
                    email:collectEmail,
                    password:collectPassword
                }
            )
        })
        if(resultMessage){
            console.log('Process Completed');
            console.log(resultMessage)
        }
       
       }
       catch(err){
        console.log(`Process Unsuccessful ${err}`)
       }
    }
    return (
        <ScrollView>
            <View style={styles.outerView}>
            <View style={styles.mainLogo}>
                <FontAwesome name='edit' size={170} color='lightseagreen'></FontAwesome>
            </View>
            
            <Text style={styles.mainText}>Register Your Account</Text>
            
            <View style={styles.entryFiledView}><Icon name='user' size={22} color='cornflowerblue'></Icon><TextInput maxLength={30} style={styles.textInputStyle} placeholder='Enter your UserID' placeholderTextColor='darkslategrey' onChangeText={(text)=>setCollectUname(text)} value={collectUname}></TextInput></View>
            {
                (collectUname.length>0 && collectUname.length<3)? <Text style={styles.warningText}>Please Enter Valid UserName</Text>:null
            }
            <View style={styles.entryFiledView}><Icon name='at-sign' size={22} color='cornflowerblue'></Icon><TextInput maxLength={30} style={styles.textInputStyle} placeholder='Enter your Email' placeholderTextColor='darkslategrey' onChangeText={(text)=>handleEmail(text)} value={collectEmail}></TextInput></View>
            {
                collectEmail.length>0?  (validEmail? null: <Text style={styles.warningText}>Enter Valid Email</Text>):null
            }
            <View style={styles.entryFiledView}><Icon name='lock' size={22} color='cornflowerblue'></Icon><TextInput style={styles.textInputStyle} placeholder='Enter your Password' placeholderTextColor='darkslategrey' value={collectPassword} onChangeText={(text)=>handlePassword(text)}
                maxLength={15}></TextInput></View>
            {
                collectPassword.length>0? ((validPassword && collectPassword.length>8 )? null: <Text style={styles.warningText}>Please Enter a valid password</Text>):null
            }
            <View style={styles.entryFiledView}><Icon name='lock' size={22} color='cornflowerblue'></Icon><TextInput style={styles.textInputStyle} placeholder='Confirm your Password' placeholderTextColor='darkslategrey' value={confirmPassword} onChangeText={(text)=>handleConfirmPassword(text)}></TextInput></View>
            {
               lengthCheck? (comparePassword===confirmPassword? null: <Text style={styles.warningText}>Passwords are not matching</Text>):null
            }
            <TouchableHighlight style={styles.touchableStyle} onPress={createAccount}>
                <Text style={styles.buttonStyle}>Create Account</Text>
            </TouchableHighlight>
        </View>
        </ScrollView>
    )
}

//exports 
export default SignUp
